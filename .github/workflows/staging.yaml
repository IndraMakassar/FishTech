name: Staging Preview Build

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

jobs:
  staging:
    name: Build APK for Staging
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.27.1
          cache: true

      - name: Check Flutter version
        run: flutter --version

      - name: Get dependencies
        run: flutter pub get

      - name: Generate lib/const.dart
        run: echo "const SUPABASE_URL = '${{ secrets.SUPABASE_URL }}'; const ANON_KEY = '${{ secrets.SUPABASE_ANON_KEY }}';" > lib/const.dart

      - name: Decode firebase_options.dart
        run: echo "${{ secrets.FIREBASE_OPTIONS_BASE64 }}" | base64 -d > lib/firebase_options.dart

      - name: Decode google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" | base64 -d > android/app/google-services.json

      - name: Check required files
        run: |
          test -f lib/const.dart && echo "const.dart OK"
          test -f lib/firebase_options.dart && echo "firebase_options.dart OK"
          test -f android/app/google-services.json && echo "google-services.json OK"

      - name: Generate splash screen
        run: dart run flutter_native_splash:create

      - name: Generate launcher icons
        run: flutter pub run flutter_launcher_icons

#      - name: Analyze Dart code
#        run: flutter analyze
#
#      - name: Run tests
#        run: flutter test

      - name: Build APK
        run: flutter build apk --debug

      - name: Upload APK to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: staging-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
